const nxPreset = require("@nx/jest/preset").default;
const esModules = [
	"@adobe",
	"@eslint",
	"@headlessui",
	"@humanwhocodes",
	"@isaacs",
	"@kurkle",
	"@mdx-js",
	"@mole-inc",
	"@napi-rs",
	"@react-dnd",
	"@swc",
	"@tanstack",
	"@ungap",
	"@whatwg-node",
	"axios",
	"bail",
	"bcp-47",
	"bcp-47-match",
	"bcp-47-normalize",
	"bin-version",
	"bin-version-check",
	"ccount",
	"character-entities",
	"character-entities-html4",
	"character-entities-legacy",
	"character-reference-invalid",
	"chart.js",
	"chartjs-adapter-date-fns",
	"chartjs-chart-matrix",
	"cliui",
	"collapse-white-space",
	"colorette",
	"comma-separated-tokens",
	"css-declaration-sorter",
	"css-tree",
	"csso",
	"decode-named-character-reference",
	"devlop",
	"direction",
	"dnd-core",
	"es-module-lexer",
	"eslint-import-resolver-typescript",
	"eslint-scope",
	"eslint-visitor-keys",
	"espree",
	"estree-util-attach-comments",
	"estree-util-build-jsx",
	"estree-util-is-identifier-name",
	"estree-util-to-js",
	"estree-util-visit",
	"estree-walker",
	"file-type",
	"filename-reserved-regex",
	"filenamify",
	"find-cache-dir",
	"find-up",
	"find-versions",
	"flatted",
	"foreground-child",
	"fraction.js",
	"get-package-type",
	"get-tsconfig",
	"goober",
	"hast-util-embedded",
	"hast-util-from-dom",
	"hast-util-from-html",
	"hast-util-from-html-isomorphic",
	"hast-util-from-parse5",
	"hast-util-from-string",
	"hast-util-has-property",
	"hast-util-is-conditional-comment",
	"hast-util-is-css-link",
	"hast-util-is-css-style",
	"hast-util-is-element",
	"hast-util-is-event-handler",
	"hast-util-is-javascript",
	"hast-util-parse-selector",
	"hast-util-select",
	"hast-util-to-estree",
	"hast-util-to-jsx-runtime",
	"hast-util-to-string",
	"hast-util-to-text",
	"hast-util-whitespace",
	"hastscript",
	"html-enumerated-attributes",
	"html-url-attributes",
	"is-absolute-url",
	"is-alphabetical",
	"is-alphanumerical",
	"is-decimal",
	"is-hexadecimal",
	"is-reference",
	"jackspeak",
	"jwt-decode",
	"lines-and-columns",
	"locate-path",
	"longest-streak",
	"markdown-extensions",
	"markdown-table",
	"mdast-util-find-and-replace",
	"mdast-util-from-markdown",
	"mdast-util-gfm",
	"mdast-util-gfm-autolink-literal",
	"mdast-util-gfm-footnote",
	"mdast-util-gfm-strikethrough",
	"mdast-util-gfm-table",
	"mdast-util-gfm-task-list-item",
	"mdast-util-math",
	"mdast-util-mdx",
	"mdast-util-mdx-expression",
	"mdast-util-mdx-jsx",
	"mdast-util-mdxjs-esm",
	"mdast-util-phrasing",
	"mdast-util-to-hast",
	"mdast-util-to-markdown",
	"mdast-util-to-string",
	"micromark",
	"micromark-core-commonmark",
	"micromark-extension-gfm",
	"micromark-extension-gfm-autolink-literal",
	"micromark-extension-gfm-footnote",
	"micromark-extension-gfm-strikethrough",
	"micromark-extension-gfm-table",
	"micromark-extension-gfm-tagfilter",
	"micromark-extension-gfm-task-list-item",
	"micromark-extension-math",
	"micromark-extension-mdx-expression",
	"micromark-extension-mdx-jsx",
	"micromark-extension-mdx-md",
	"micromark-extension-mdxjs",
	"micromark-extension-mdxjs-esm",
	"micromark-factory-destination",
	"micromark-factory-label",
	"micromark-factory-mdx-expression",
	"micromark-factory-space",
	"micromark-factory-title",
	"micromark-factory-whitespace",
	"micromark-util-character",
	"micromark-util-chunked",
	"micromark-util-classify-character",
	"micromark-util-combine-extensions",
	"micromark-util-decode-numeric-character-reference",
	"micromark-util-decode-string",
	"micromark-util-encode",
	"micromark-util-events-to-acorn",
	"micromark-util-html-tag-name",
	"micromark-util-normalize-identifier",
	"micromark-util-resolve-all",
	"micromark-util-sanitize-uri",
	"micromark-util-subtokenize",
	"micromark-util-symbol",
	"micromark-util-types",
	"nanoid",
	"next-mdx-remote",
	"next-superjson-plugin",
	"node-releases",
	"p-locate",
	"package-json-from-dist",
	"parse-entities",
	"path-exists",
	"path-scurry",
	"peek-readable",
	"periscopic",
	"pkg-dir",
	"prettier-plugin-tailwindcss",
	"property-information",
	"react-chartjs-2",
	"react-dnd",
	"react-markdown",
	"refractor",
	"rehype-citation",
	"rehype-external-links",
	"rehype-katex",
	"rehype-minify-attribute-whitespace",
	"rehype-minify-css-style",
	"rehype-minify-enumerated-attribute",
	"rehype-minify-event-handler",
	"rehype-minify-javascript-script",
	"rehype-minify-javascript-url",
	"rehype-minify-json-script",
	"rehype-minify-language",
	"rehype-minify-media-attribute",
	"rehype-minify-meta-color",
	"rehype-minify-meta-content",
	"rehype-minify-style-attribute",
	"rehype-minify-whitespace",
	"rehype-normalize-attribute-value-case",
	"rehype-parse",
	"rehype-preset-minify",
	"rehype-prism-plus",
	"rehype-remove-comments",
	"rehype-remove-duplicate-attribute-values",
	"rehype-remove-empty-attribute",
	"rehype-remove-external-script-content",
	"rehype-remove-meta-http-equiv",
	"rehype-remove-script-type-javascript",
	"rehype-remove-style-type-css",
	"rehype-sort-attribute-values",
	"rehype-sort-attributes",
	"remark-gfm",
	"remark-math",
	"remark-mdx",
	"remark-parse",
	"remark-rehype",
	"remark-stringify",
	"resolve-pkg-maps",
	"semver-regex",
	"semver-truncate",
	"space-separated-tokens",
	"stringify-entities",
	"strip-outer",
	"strtok3",
	"superjson",
	"terser",
	"token-types",
	"trim-lines",
	"trim-repeated",
	"trough",
	"ts-api-utils",
	"tsx",
	"unified",
	"unist-util-filter",
	"unist-util-find-after",
	"unist-util-is",
	"unist-util-position",
	"unist-util-position-from-estree",
	"unist-util-remove",
	"unist-util-remove-position",
	"unist-util-stringify-position",
	"unist-util-visit",
	"unist-util-visit-parents",
	"urlpattern-polyfill",
	"vfile",
	"vfile-location",
	"vfile-matter",
	"vfile-message",
	"web-namespaces",
	"y18n",
	"yargs",
	"yargs-parser",
	"zwitch"
].join("|");

const path = require("path");

const projectRoot = path.resolve(__dirname, "./");

module.exports = {
	...nxPreset,
	setupFiles: ["dotenv/config"],
	globals: {},
	/* TODO: Update to latest Jest snapshotFormat
	 * By default Nx has kept the older style of Jest Snapshot formats
	 * to prevent breaking of any existing tests with snapshots.
	 * It's recommend you update to the latest format.
	 * You can do this by removing snapshotFormat property
	 * and running tests with --update-snapshot flag.
	 * Example: "nx affected --targets=test --update-snapshot"
	 * More info: https://jestjs.io/docs/upgrading-to-jest29#snapshot-format
	 */
	snapshotFormat: { escapeString: true, printBasicPrototype: true },
	collectCoverageFrom: [
		"src/**/*.{js,jsx,ts,tsx}",
		"libs/**/*.{js,jsx,ts,tsx}",
		"!<rootDir>/node_modules/"
	],
	coverageReporters: ["cobertura", "text", "html"],
	coverageDirectory: "output/test/coverage",
	reporters: [
		"default",
		["jest-junit", { outputDirectory: "output/test", outputName: "junit.xml" }]
	],
	transform: {
		"^.+\\.[tj]sx?$": [
			"ts-jest",
			{
				tsconfig: "<rootDir>/tsconfig.spec.json"
			}
		],
		"^.+\\.svg$": path.join(projectRoot, "jest.svgTransform.js")
	},
	moduleFileExtensions: ["ts", "tsx", "js", "jsx"],
	transformIgnorePatterns: [path.join(projectRoot, `/node_modules/(?!${esModules})`)]
};
