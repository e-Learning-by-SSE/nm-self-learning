model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                          String               @id @default(cuid())
    name                        String               @unique
    displayName                 String
    email                       String?              @unique
    emailVerified               DateTime?
    image                       String?
    role                        UserRole             @default(USER)
    accounts                    Account[]
    author                      Author?
    sessions                    Session[]
    student                     Student?
    gamificationProfile         GamificationProfile?
    uploadedAssets              UploadedAssets[]
    skillRepositories           SkillRepository[]
    notifications               NotificationUser[]
    reminders                   ReminderLog[]
    // Settings
    notificationSettings        Json?
    enabledLearningStatistics   Boolean              @default(false)
    enabledFeatureLearningDiary Boolean              @default(false)
    registrationCompleted       Boolean              @default(false)

    // temporary fields masterarbeit marcel
    acceptedExperimentTerms DateTime?
    experimentalFeatures    Boolean?  @default(false) // Null: No-Participation, True: Participation group A, False: Participation group B
}

enum UserRole {
    USER
    ADMIN
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
