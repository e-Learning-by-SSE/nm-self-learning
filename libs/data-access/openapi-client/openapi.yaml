openapi: 3.0.0
paths:
  /skill-repositories:
    post:
      operationId: SkillMgmtController_searchForRepositories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRepositorySearchDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryListDto'
      tags:
        - Skill
  /skill-repositories/{owner}:
    get:
      operationId: SkillMgmtController_listRepositories
      summary: ''
      description: Lists all repositories of the specified user, without showing its content.
      parameters:
        - name: owner
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryListDto'
      tags:
        - Skill
  /skill-repositories/byId/{repositoryId}:
    get:
      operationId: SkillMgmtController_loadRepository
      summary: ''
      description: |-
        Returns one repository and its unresolved elements.
        Skills and their relations are handled as IDs and need to be resolved on the client-side.
      parameters:
        - name: repositoryId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnresolvedSkillRepositoryDto'
      tags:
        - Skill
  /skill-repositories/findSkills:
    post:
      operationId: SkillMgmtController_findSkills
      summary: ''
      description: Lists all skills.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillSearchDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillListDto'
      tags:
        - Skill
  /skill-repositories/resolve/{repositoryId}:
    get:
      operationId: SkillMgmtController_loadResolvedRepository
      summary: ''
      description: |-
        Returns one resolved repository and its elements.
        Skills and their relations are resolved at the server.
      parameters:
        - name: repositoryId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedSkillRepositoryDto'
      tags:
        - Skill
  /skill-repositories/resolve/findSkills:
    post:
      operationId: SkillMgmtController_findSkillsResolved
      summary: ''
      description: Lists all skills.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillSearchDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedSkillListDto'
      tags:
        - Skill
  /skill-repositories/create:
    post:
      operationId: SkillMgmtController_createRepository
      summary: ''
      description: Creates a new skill repository for the specified user.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRepositoryCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillRepositoryDto'
      tags:
        - Skill
  /skill-repositories/{repositoryId}/skill/add_skill:
    post:
      operationId: SkillMgmtController_addSkill
      summary: ''
      description: Creates a new skill at the specified repository and returns the created skill.
      parameters:
        - name: repositoryId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - Skill
  /skill-repositories/skill/{skillId}:
    get:
      operationId: SkillMgmtController_getSkill
      summary: ''
      description: Returns the specified skill.
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - Skill
  /skill-repositories/resolve/skill/{skillId}:
    get:
      operationId: SkillMgmtController_getResolvedSkill
      summary: ''
      description: Returns the specified skill.
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedSkillDto'
      tags:
        - Skill
  /skill-repositories/{repositoryId}/skill/adapt_skill:
    post:
      operationId: SkillMgmtController_adaptSkill
      summary: ''
      description: Adapts a skill at the specified repository and returns the adapted skill.
      parameters:
        - name: repositoryId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDto'
      tags:
        - Skill
  /skill-repositories/skill/delete/{skillId}:
    delete:
      operationId: SkillMgmtController_delteSkill
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Skill
  /learningpaths/showAllLearningPaths:
    get:
      operationId: LearningPathMgmtController_listLearningPaths
      summary: ''
      description: Lists all learning paths.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPathListDto'
      tags:
        - LearningPath
  /learningpaths/add_learningpath:
    post:
      operationId: LearningPathMgmtController_addLearningpath
      summary: ''
      description: Creates a new learningpath at the specified repository and returns the created learningpath.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearningPathCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPathDto'
      tags:
        - LearningPath
  /learningpaths/{learningpathId}:
    get:
      operationId: LearningPathMgmtController_getLearningPath
      summary: ''
      description: Returns the specified learningpath.
      parameters:
        - name: learningpathId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPathDto'
      tags:
        - LearningPath
  /learningUnits/showAllLearningUnits:
    get:
      operationId: SelfLearnLearningUnitController_listLearningUnits
      summary: ''
      description: Lists all learningUnits.
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfLearnLearningUnitListDto'
      tags:
        - LearningUnit
  /learningUnits/add_learningUnit:
    post:
      operationId: SelfLearnLearningUnitController_addLearningUnitSelfLearn
      summary: ''
      description: Creates a new learningUnit at the specified repository and returns the created learningUnit.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfLearnLearningUnitCreationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfLearnLearningUnitDto'
      tags:
        - LearningUnit
  /learningUnits/{learningUnitId}:
    get:
      operationId: SelfLearnLearningUnitController_getLearningUnit
      summary: ''
      description: Returns the specified learningUnit.
      parameters:
        - name: learningUnitId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfLearnLearningUnitDto'
      tags:
        - LearningUnit
  /PathFinder/getConnectedGraphForSkill/{skillId}:
    get:
      operationId: PathFinderController_getConnectedGraphForSkill
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDto'
      tags:
        - PathFinder
  /PathFinder/getConnectedSkillGraphForSkill/{skillId}:
    get:
      operationId: PathFinderController_getConnectedSkillGraphForSkill
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDto'
      tags:
        - PathFinder
  /PathFinder/getConnectedGraphForSkillwithResolvedElements/{skillId}:
    get:
      operationId: PathFinderController_getConnectedGraphForSkillwithResolvedElements
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - PathFinder
  /PathFinder/checkGraph/{skillId}:
    get:
      operationId: PathFinderController_checkGraph
      parameters:
        - name: skillId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckGraphDto'
      tags:
        - PathFinder
  /PathFinder/getPathforJava:
    get:
      operationId: PathFinderController_getPathToSkill
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathDto'
      tags:
        - PathFinder
  /PathFinder/allSkillsDone/{repoId}:
    get:
      operationId: PathFinderController_allSkillsDone
      parameters:
        - name: repoId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
      tags:
        - PathFinder
info:
  title: Skill Repository
  description: The API description of the Skill Repository.
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    SkillRepositorySearchDto:
      type: object
      properties:
        pageSize:
          type: number
        page:
          type: number
        name:
          type: string
        version:
          type: string
        owner:
          type: string
    SkillRepositoryDto:
      type: object
      properties:
        owner:
          type: string
        id:
          type: string
        taxonomy:
          type: string
        description:
          type: string
        name:
          type: string
        version:
          type: string
      required:
        - owner
        - id
        - name
    SkillRepositoryListDto:
      type: object
      properties:
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/SkillRepositoryDto'
      required:
        - repositories
    UnresolvedSkillRepositoryDto:
      type: object
      properties:
        owner:
          type: string
        id:
          type: string
        taxonomy:
          type: string
        description:
          type: string
        name:
          type: string
        version:
          type: string
        skills:
          type: array
          items:
            type: string
      required:
        - owner
        - id
        - name
        - skills
    SkillSearchDto:
      type: object
      properties:
        pageSize:
          type: number
        page:
          type: number
        name:
          type: string
        level:
          type: number
        skillMap:
          type: string
    SkillDto:
      type: object
      properties:
        id:
          type: string
        nestedSkills:
          type: array
          items:
            type: string
        repositoryId:
          type: string
        name:
          type: string
        level:
          type: number
        description:
          type: string
      required:
        - id
        - nestedSkills
        - repositoryId
        - name
        - level
    SkillListDto:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
      required:
        - skills
    ResolvedSkillDto:
      type: object
      properties:
        id:
          type: string
        nestedSkills:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        name:
          type: string
        level:
          type: number
        description:
          type: string
      required:
        - id
        - nestedSkills
        - name
        - level
    ResolvedSkillRepositoryDto:
      type: object
      properties:
        id:
          type: string
        taxonomy:
          type: string
        description:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        name:
          type: string
        version:
          type: string
      required:
        - id
        - skills
        - name
    ResolvedSkillListDto:
      type: object
      properties:
        skills:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
      required:
        - skills
    SkillRepositoryCreationDto:
      type: object
      properties:
        owner:
          type: string
        name:
          type: string
        description:
          type: string
        version:
          type: string
      required:
        - owner
        - name
    SkillCreationDto:
      type: object
      properties:
        owner:
          type: string
          description: Used to validate that the user is the owner of the target repository.
        name:
          type: string
        level:
          type: number
        description:
          type: string
        nestedSkills:
          type: array
          items:
            $ref: '#/components/schemas/SkillCreationDto'
      required:
        - owner
        - name
        - level
        - nestedSkills
    PathGoalDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        targetAudience:
          type: string
        description:
          type: string
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        pathGoals:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
      required:
        - id
        - title
        - requirements
        - pathGoals
    LearningPathDto:
      type: object
      properties:
        id:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/PathGoalDto'
        title:
          type: string
        description:
          type: string
      required:
        - id
        - goals
        - title
    LearningPathListDto:
      type: object
      properties:
        learningPaths:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathDto'
      required:
        - learningPaths
    PathGoalCreationDto:
      type: object
      properties:
        title:
          type: string
        targetAudience:
          type: string
        description:
          type: string
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
        pathGoals:
          type: array
          items:
            $ref: '#/components/schemas/ResolvedSkillDto'
      required:
        - title
        - requirements
        - pathGoals
    LearningPathCreationDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/PathGoalCreationDto'
      required:
        - title
        - goals
    SelfLearnLearningUnitDto:
      type: object
      properties:
        selfLearnId:
          type: string
        order:
          type: number
        title:
          type: string
        resource:
          type: string
          description: Should point to a resource (e.g. a website) which contains the learning unit.
        language:
          type: string
        description:
          type: string
        teachingGoals:
          default: []
          type: array
          items:
            type: string
        requiredSkills:
          default: []
          type: array
          items:
            type: string
      required:
        - selfLearnId
        - title
        - resource
        - language
        - teachingGoals
        - requiredSkills
    SelfLearnLearningUnitListDto:
      type: object
      properties:
        learningUnits:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/SelfLearnLearningUnitDto'
      required:
        - learningUnits
    SelfLearnLearningUnitCreationDto:
      type: object
      properties:
        order:
          type: number
        title:
          type: string
        resource:
          type: string
          description: Should point to a resource (e.g. a website) which contains the learning unit.
        language:
          type: string
        description:
          type: string
        teachingGoals:
          default: []
          type: array
          items:
            type: string
        requiredSkills:
          default: []
          type: array
          items:
            type: string
      required:
        - title
        - resource
        - language
        - teachingGoals
        - requiredSkills
    EdgeDto:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
    NodeDto:
      type: object
      properties:
        id:
          type: string
        metadata:
          type: string
      required:
        - id
        - metadata
    GraphDto:
      type: object
      properties:
        edges:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDto'
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/NodeDto'
      required:
        - edges
        - nodes
    CheckGraphDto:
      type: object
      properties:
        isAcyclic:
          type: boolean
      required:
        - isAcyclic
    PathDto:
      type: object
      properties:
        luIDs:
          type: array
          items:
            type: object
      required:
        - luIDs
