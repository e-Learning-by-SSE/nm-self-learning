{
  "version": 3,
  "sources": ["../../../../../../../node_modules/refractor/lang/css.js"],
  "sourcesContent": ["// @ts-nocheck\ncss.displayName = 'css'\ncss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: RegExp(\n          '@[\\\\w-](?:' +\n            /[^;{\\s\"']|\\s+(?!\\s)/.source +\n            '|' +\n            string.source +\n            ')*?' +\n            /(?:;|(?=\\s*\\{))/.source\n        ),\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          }\n          // See rest below\n        }\n      },\n\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n"],
  "mappings": ";;;AACA,IAAI,cAAc;AAClB,IAAI,UAAU,CAAC;AAGA,SAAR,IAAqB,OAAO;AACjC;AAAC,GAAC,SAAUA,QAAO;AACjB,QAAI,SACF;AACF,IAAAA,OAAM,UAAU,MAAM;AAAA,MACpB,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,SAAS;AAAA,UACP,eACE,sBAAsB,SACtB,MACA,OAAO,SACP,QACA,kBAAkB;AAAA,QACtB;AAAA,QACA,QAAQ;AAAA,UACN,MAAM;AAAA,UACN,8BAA8B;AAAA,YAC5B,SACE;AAAA,YACF,YAAY;AAAA,YACZ,OAAO;AAAA,UACT;AAAA,UACA,SAAS;AAAA,YACP,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA;AAAA,QAEF;AAAA,MACF;AAAA,MAEA,KAAK;AAAA;AAAA,QAEH,SAAS;AAAA,UACP,iBACE,OAAO,SACP,MACA,8BAA8B,SAC9B;AAAA,UACF;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,UAAU;AAAA,UACV,aAAa;AAAA,UACb,QAAQ;AAAA,YACN,SAAS,OAAO,MAAM,OAAO,SAAS,GAAG;AAAA,YACzC,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,SAAS;AAAA,UACP,sDACE,OAAO,SACP;AAAA,QACJ;AAAA,QACA,YAAY;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,MACV;AAAA,MACA,UAAU;AAAA,QACR,SACE;AAAA,QACF,YAAY;AAAA,MACd;AAAA,MACA,WAAW;AAAA,MACX,UAAU;AAAA,QACR,SAAS;AAAA,QACT,YAAY;AAAA,MACd;AAAA,MACA,aAAa;AAAA,IACf;AACA,IAAAA,OAAM,UAAU,IAAI,QAAQ,EAAE,OAAO,OAAOA,OAAM,UAAU;AAC5D,QAAI,SAASA,OAAM,UAAU;AAC7B,QAAI,QAAQ;AACV,aAAO,IAAI,WAAW,SAAS,KAAK;AACpC,aAAO,IAAI,aAAa,SAAS,KAAK;AAAA,IACxC;AAAA,EACF,GAAG,KAAK;AACV;",
  "names": ["Prism"]
}
